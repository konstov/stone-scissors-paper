from copy import deepcopy

from . import constants, helpers


# –Ω–æ–≤–∞—è —Å–µ—Å—Å–∏—è
def new_session():
    text = """
        –ü—Ä–∏–≤–µ—Ç! –°—ã–≥—Ä–∞–µ–º –≤ –∫–∞–º–µ–Ω—å-–Ω–æ–∂–Ω–∏—Ü—ã-–±—É–º–∞–≥–∞! –í—ã–±–∏—Ä–∞–π—Ç–µ, –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã –∏–ª–∏ –±—É–º–∞–≥–∞? 
        –°–∫–∞–∂–∏—Ç–µ "–ü–æ–º–æ—â—å" –∏–ª–∏ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–≥—Ä—ã (—Ç–∞–º –µ—Å—Ç—å –∫–æ–µ-—á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µüòâ)."""
    tts = """
        –ü—Ä–∏–≤–µ—Ç! - - - –°—ã–≥—Ä–∞–µ–º –≤ - –∫–∞–º–µ–Ω—å - –Ω–æ–∂–Ω–∏—Ü—ã - –±—É–º–∞–≥–∞! –í—ã–±–∏—Ä–∞–π—Ç–µ, - - –∫–∞–º–µ–Ω—å - -  –Ω–æ–∂–Ω–∏—Ü—ã - –∏–ª–∏ - –±—É–º–∞–≥–∞? - - 
        –°–∫–∞–∂+–∏—Ç–µ, - - –ø–æ–º–æ—â—å - - –∏–ª–∏ - - —á—Ç–æ - —Ç—ã - —É–º–µ–µ—à—å - , —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –∏–≥—Ä+—ã.
        - - —Ç–∞–º –µ—Å—Ç—å –∫–æ–µ-—á—Ç–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ–µ.
    """
    blank_stats = deepcopy(constants.BLANK_STATS)

    return text, tts, blank_stats


# –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤
def prepare_answers(bot_choice, bot_choice_text_for_speech, is_looser, round_result):
    # text_answer, sound_answer
    invitation, prefix, main_phrase, game_select, emoticon, sound \
        = helpers.create_answer_parameters(is_loose=is_looser, round_result=round_result)

    return ['{}{}{}{}{}. {}'.format(prefix,
                                    main_phrase,
                                    emoticon,
                                    game_select,
                                    bot_choice,
                                    invitation
                                    ),

            '{} - - - {}{} - - - {}{}. {}'.format(sound,
                                                  prefix,
                                                  main_phrase,
                                                  game_select,
                                                  bot_choice_text_for_speech,
                                                  invitation
                                                  )
            ]


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä—è–¥–æ–≤ —Å–æ–±—ã—Ç–∏–π, –º–æ–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –¥–ª–∏–Ω—É —Ä—è–¥–∞ –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è —Å–æ–±—ã—Ç–∏–π –∏ –ø–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ,
# –µ—Å–ª–∏ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è.
def remarkable_metrics(session_state, limit):
    if limit < 5:
        if session_state['wins_in_row'] == limit:
            return ' –ö—Å—Ç–∞—Ç–∏, —É–∂–µ {} –ø–æ–±–µ–¥—ã –∫ —Ä—è–¥—É! –≠—Ç–æ —Ç—è–Ω–µ—Ç –Ω–∞ —Ä–µ–∫–æ—Ä–¥!'.format(limit)
        elif session_state['ties_in_row'] == limit:
            return ' –ö—Å—Ç–∞—Ç–∏, —É–∂–µ {} –Ω–∏—á—å–∏ –ø–æ–¥—Ä—è–¥. –ù–∞–¥–æ –Ω–∞—á–∏–Ω–∞—Ç—å –ø–æ–±–µ–∂–¥–∞—Ç—å!'.format(limit)
        elif session_state['looses_in_row'] == limit:
            return ' –ö—Å—Ç–∞—Ç–∏, —É–∂–µ {} –ø–æ—Ä–∞–∂–µ–Ω–∏—è –ø–æ–¥—Ä—è–¥! –ü–æ—Ä–∞ –ø–µ—Ä–µ–ª–æ–º–∏—Ç—å —Ö–æ–¥ –∏–≥—Ä—ã!'.format(limit)
        return ''

    else:
        if session_state['wins_in_row'] == limit:
            return ' –ö—Å—Ç–∞—Ç–∏, —É–∂–µ {} –ø–æ–±–µ–¥ –∫ —Ä—è–¥—É! –≠—Ç–æ —Ç—è–Ω–µ—Ç –Ω–∞ —Ä–µ–∫–æ—Ä–¥!'.format(limit)
        elif session_state['ties_in_row'] == limit:
            return ' –ö—Å—Ç–∞—Ç–∏, —É–∂–µ {} –Ω–∏—á—å–∏—Ö –ø–æ–¥—Ä—è–¥. –ù–∞–¥–æ –ø–æ–±–µ–∂–¥–∞—Ç—å!'.format(limit)
        elif session_state['looses_in_row'] == limit:
            return ' –ö—Å—Ç–∞—Ç–∏, —É–∂–µ {} –ø–æ—Ä–∞–∂–µ–Ω–∏–π –ø–æ–¥—Ä—è–¥! –ü–æ—Ä–∞ –ø–µ—Ä–µ–ª–æ–º–∏—Ç—å —Ö–æ–¥ –∏–≥—Ä—ã!'.format(limit)
        return ''


# —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
def statistics(session_state):
    text = '–ü–æ–±–µ–¥: {}, –Ω–∏—á—å–∏—Ö: {}, –ø–æ—Ä–∞–∂–µ–Ω–∏–π: {}.'.format(session_state['wins'],
                                                          session_state['ties'],
                                                          session_state['looses'])

    tts = '–ü–æ–±–µ–¥ - - {} - - - -, –Ω–∏—á—å–∏—Ö - - {} - - - -, –ø–æ—Ä–∞–∂–µ–Ω–∏–π - - {}'.format(session_state['wins'],
                                                                                 session_state['ties'],
                                                                                 session_state['looses'])

    return text, tts


# –ø–æ–º–æ—â—å
def help_answer():
    text = """
        –ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å, —Å–∫–∞–∂–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã "–∫–∞–º–µ–Ω—å", "–Ω–æ–∂–Ω–∏—Ü—ã" –∏–ª–∏ "–±—É–º–∞–≥–∞". 
        –ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö —ç–º–æ—Ç–∏–∫–æ–Ω–æ–≤: '‚úä', '‚úå', '‚úã'.
        –í –æ—Ç–≤–µ—Ç –∏–≥—Ä–∞ –ø—Ä–∏—à–ª—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞.
        
        –ß—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞, —è—â–µ—Ä–∏—Ü–∞, –°–ø–æ–∫ —Å–∫–∞–∂–∏—Ç–µ "—Å–ª–æ–∂–Ω–∞—è –∏–≥—Ä–∞".
        –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —è—â–µ—Ä–∏—Ü–∞ üêâ –∏ –°–ø–æ–∫ üëΩ.
        –ü—Ä–∞–≤–∏–ª–∞ —Ç–∞–∫–∏–µ:
        –ö–∞–º–µ–Ω—å –¥–∞–≤–∏—Ç —è—â–µ—Ä–∏—Ü—É –∏ –∑–∞—Ç—É–ø–ª—è–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã.
        –ù–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É –∏ –æ–±–µ–∑–≥–ª–∞–≤–ª–∏–≤–∞—é—Ç —è—â–µ—Ä–∏—Ü—É (–±–µ–¥–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ).
        –ë—É–º–∞–≥–∞ –æ–ø—Ä–æ–≤–µ—Ä–≥–∞–µ—Ç –°–ø–æ–∫–∞ –∏ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å.
        –Ø—â–µ—Ä–∏—Ü–∞ –ø–æ–µ–¥–∞–µ—Ç –±—É–º–∞–≥—É –∏ –æ—Ç—Ä–∞–≤–ª—è–µ—Ç –°–ø–æ–∫–∞.
        –°–ø–æ–∫ —Ä–∞–∑–±–∏–≤–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã –∏ –∏—Å–ø–∞—Ä—è–µ—Ç –∫–∞–º–µ–Ω—å.
        –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ —è—â–µ—Ä–∏—Ü—ã –∏ –°–ø–æ–∫–∞, —Å–∫–∞–∂–∏—Ç–µ "–ø—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–∞".
        
        –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏, –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ª–æ–≤–æ "—Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞".
        
        –°–∫–∞–∂–∏—Ç–µ "—Ö–≤–∞—Ç–∏—Ç", —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É.
    """
    tts = '\
        –ß—Ç–æ–±—ã –∏–≥—Ä–∞—Ç—å, —Å–∫–∞–∂–∏—Ç–µ –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã - - –∫–∞–º–µ–Ω—å - -, - - –Ω–æ–∂–Ω–∏—Ü—ã - - –∏–ª–∏ - - –±—É–º–∞–≥–∞ - -. \
        –ò–ª–∏ –ø—Ä–∏—à–ª–∏—Ç–µ –æ–¥–∏–Ω –∏–∑ —ç—Ç–∏—Ö —ç–º–æ—Ç–∏–∫–æ–Ω–æ–≤: - –∫–∞–º–µ–Ω—å - , - –Ω–æ–∂–Ω–∏—Ü—ã -, - –±—É–º–∞–≥–∞ -.\
        –í –æ—Ç–≤–µ—Ç –∏–≥—Ä–∞ –ø—Ä–∏—à–ª—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ä–∞—É–Ω–¥–∞.\
        –ß—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å –≤ - –∫–∞–º–µ–Ω—å , - –Ω–æ–∂–Ω–∏—Ü—ã , - –±—É–º–∞–≥–∞ , - —è—â–µ—Ä–∏—Ü–∞ , - –°–ø–æ–∫ - —Å–∫–∞–∂+–∏—Ç–µ - - —Å–ª–æ–∂–Ω–∞—è - –∏–≥—Ä–∞ - - \
        –í —ç—Ç–æ–º —Ä–µ–∂–∏–º–µ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è —è—â–µ—Ä–∏—Ü–∞ –∏ –°–ø–æ–∫. \
        –ü—Ä–∞–≤–∏–ª–∞ —Ç–∞–∫–∏–µ : \
        –ö–∞–º–µ–Ω—å –¥–∞–≤–∏—Ç —è—â–µ—Ä–∏—Ü—É –∏ –∑–∞—Ç—É–ø–ª—è–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã - - . \
        –ù–æ–∂–Ω–∏—Ü—ã —Ä–µ–∂—É—Ç –±—É–º–∞–≥—É –∏ –æ–±–µ–∑–≥–ª–∞–≤–ª–∏–≤–∞—é—Ç —è—â–µ—Ä–∏—Ü—É - - –±–µ–¥–Ω–æ–µ –∂–∏–≤–æ—Ç–Ω–æ–µ - - . \
        –ë—É–º–∞–≥–∞ –æ–ø—Ä–æ–≤–µ—Ä–≥–∞–µ—Ç –°–ø–æ–∫–∞ –∏ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ—Ç –∫–∞–º–µ–Ω—å - - . \
        –Ø—â–µ—Ä–∏—Ü–∞ –ø–æ–µ–¥–∞–µ—Ç –±—É–º–∞–≥—É –∏ –æ—Ç—Ä–∞–≤–ª—è–µ—Ç –°–ø–æ–∫–∞ - - . \
        –°–ø–æ–∫ —Ä–∞–∑–±–∏–≤–∞–µ—Ç –Ω–æ–∂–Ω–∏—Ü—ã –∏ –∏—Å–ø–∞—Ä—è–µ—Ç –∫–∞–º–µ–Ω—å - - .\
        –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ –≤–∞—Ä–∏–∞–Ω—Ç –±–µ–∑ —è—â–µ—Ä–∏—Ü—ã –∏ –°–ø–æ–∫–∞, - - —Å–∫–∞–∂+–∏—Ç–µ  - - –ø—Ä–æ—Å—Ç–∞—è - –∏–≥—Ä–∞ - - . \
        –ß—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏, - –∑–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å, —Å–æ–¥–µ—Ä–∂–∞—â–∏–π —Å–ª–æ–≤–æ - - - —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ - \
        –°–∫–∞–∂–∏—Ç–µ - —Ö–≤+–∞—Ç–∏—Ç - , —á—Ç–æ–±—ã –∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä+—É. \
    '

    return text, tts


def add_lizard_spock():
    text = """
    –£—Ö —Ç—ã! –í—ã —Ä–µ—à–∏–ª–∏ —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞, —è—â–µ—Ä–∏—Ü–∞ üêâ, –°–ø–æ–∫ üëΩ!
    –ù–∞–ø–æ–º–Ω—é, —á—Ç–æ –ø—Ä–∞–≤–∏–ª–∞ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º "–ü–æ–º–æ—â—å" –∏–ª–∏ "–ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å?"
    """

    tts = '–£—Ö —Ç—ã! - –í—ã —Ä–µ—à–∏–ª–∏ —Å—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–º–µ–Ω—å, -  –Ω–æ–∂–Ω–∏—Ü—ã,  - –±—É–º–∞–≥–∞, - —è—â–µ—Ä–∏—Ü–∞, - –°–ø–æ–∫! - \
          –ù–∞–ø–æ–º–Ω—é, —á—Ç–æ –ø—Ä–∞–≤–∏–ª–∞ –º–æ–∂–Ω–æ —É–∑–Ω–∞—Ç—å –ø–æ –∫–æ–º–∞–Ω–¥–∞–º - - –ø–æ–º–æ—â—å - - –∏–ª–∏  - - –ß—Ç–æ —Ç—ã —É–º–µ–µ—à—å? '

    return text, tts


def already_lizard_spock():
    text = """
    –û, –º—ã —É–∂–µ –∏–≥—Ä–∞–µ–º –≤ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞, —è—â–µ—Ä–∏—Ü–∞ üêâ, –°–ø–æ–∫ üëΩ!
    –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∏–≥—Ä–µ –∫–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞, —Å–∫–∞–∂–∏—Ç–µ "–ø—Ä–æ—Å—Ç–∞—è –∏–≥—Ä–∞".
    """

    tts = '–û! - –ú—ã —É–∂–µ –∏–≥—Ä–∞–µ–º –≤ –∫–∞–º–µ–Ω—å, -  –Ω–æ–∂–Ω–∏—Ü—ã,  - –±—É–º–∞–≥–∞, - —è—â–µ—Ä–∏—Ü–∞, - –°–ø–æ–∫! - \
          –ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–π –∏–≥—Ä–µ - –∫–∞–º–µ–Ω—å, - –Ω–æ–∂–Ω–∏—Ü—ã, - –±—É–º–∞–≥–∞, —Å–∫–∞–∂+–∏—Ç–µ  -- –ø—Ä–æ—Å—Ç–∞—è - –∏–≥—Ä–∞. '

    return text, tts


def remove_lizard_spock():
    text = """
    –í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—É –∏–≥—Ä—ã. 
    –¢–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ ‚úä, ‚úå –∏ ‚úã, –±–µ–∑ üêâ –∏ üëΩ.
    """

    tts = '–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –∫ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–º—É –≤–∞—Ä–∏–∞–Ω—Ç—É –∏–≥—Ä—ã. - \
          –¢–µ–ø–µ—Ä—å —Ç–æ–ª—å–∫–æ –∫–∞–º–µ–Ω—å, - –Ω–æ–∂–Ω–∏—Ü—ã - –∏ - –±—É–º–∞–≥–∞ - , - –±–µ–∑ —è—â–µ—Ä–∏—Ü—ã - –∏ - –°–ø–æ–∫–∞. '

    return text, tts


def already_simple_game():
    text = """
    –î–∞, –∫–∞–∫ —Å–∫–∞–∂–µ—Ç–µ, –ø—Ä–æ–¥–æ–ª–∂–∏–º –∏–≥—Ä–∞—Ç—å –≤ –ø—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–≥—Ä—ã –±–µ–∑ —è—â–µ—Ä–∏—Ü—ã –∏ –°–ø–æ–∫–∞.
    –ß—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å —Å –Ω–∏–º–∏, —Å–∫–∞–∂–∏—Ç–µ "—Å–ª–æ–∂–Ω–∞—è –∏–≥—Ä–∞".
    """

    tts = '–î–∞, - - –∫–∞–∫ —Å–∫–∞–∂–µ—Ç–µ,  - - –ø—Ä–æ–¥–æ–ª–∂–∏–º –∏–≥—Ä–∞—Ç—å –≤ –ø—Ä–æ—Å—Ç–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–≥—Ä—ã –±–µ–∑ —è—â–µ—Ä–∏—Ü—ã –∏ –°–ø–æ–∫–∞ - \
          –ß—Ç–æ–±—ã —Å—ã–≥—Ä–∞—Ç—å —Å –Ω–∏–º–∏, —Å–∫–∞–∂–∏—Ç–µ  - - —Å–ª–æ–∂–Ω–∞—è –∏–≥—Ä–∞. '

    return text, tts


def start_limit_game(limit):
    text = """
    –ò–≥—Ä–∞–µ–º –¥–æ {} –ø–æ–±–µ–¥!
    """.format(limit)

    tts = '–ò–≥—Ä–∞–µ–º –¥–æ - {} - –ø–æ–±–µ–¥! '.format(limit)

    return text, tts


def stats_of_limit(stats):
    if stats['wins'] > stats['looses']:
        text = """
            –°—á—ë—Ç {}:{}, –≤—ã –≤–µ–¥—ë—Ç–µ –≤ –º–∞—Ç—á–µ!
            """.format(stats['wins'], stats['looses'])

        tts = '–°—á—ë—Ç - {} - - {} , –≤—ã –≤–µ–¥—ë—Ç–µ –≤ –º–∞—Ç—á–µ! '.format(stats['wins'], stats['looses'])

    elif stats['wins'] == stats['looses']:
        text = """
                    –ü–æ–∫–∞ –Ω–∏—á—å—è –≤ –º–∞—Ç—á–µ. –°—á—ë—Ç {}:{}.
                    """.format(stats['wins'], stats['looses'])

        tts = '–ü–æ–∫–∞ –Ω–∏—á—å—è –≤ –º–∞—Ç—á–µ. - –°—á—ë—Ç - {} - - {}. '.format(stats['wins'], stats['looses'])

    else:
        text = """
                    –í—ã –ø—Ä–æ–≥—Ä—ã–≤–∞–µ—Ç–µ –º–∞—Ç—á —Å–æ —Å—á—ë—Ç–æ–º {}:{}.
                    """.format(stats['wins'], stats['looses'])

        tts = '–í—ã –ø—Ä–æ–≥—Ä—ã–≤–∞–µ—Ç–µ –º–∞—Ç—á —Å–æ —Å—á—ë—Ç–æ–º - {} - - {}. '.format(stats['wins'], stats['looses'])

    return text, tts


def stats_of_limit_gameover(stats):
    if stats['wins'] > stats['looses']:
        text = """
            –ú–∞—Ç—á –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Å–æ —Å—á—ë—Ç–æ–º {}:{} –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É!
            """.format(stats['wins'], stats['looses'])

        tts = '–ú–∞—Ç—á –∑–∞–∫–æ–Ω—á–∏–ª—Å—è —Å–æ —Å—á—ë—Ç–æ–º - {} - - {} - –≤ –≤–∞—à—É –ø–æ–ª—å–∑—É! '.format(stats['wins'], stats['looses'])

    else:
        text = """
                    –ü–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–∞—Ç—á–µ —Å–æ —Å—á—ë—Ç–æ–º {}:{}.
                    """.format(stats['wins'], stats['looses'])

        tts = '–ü–æ—Ä–∞–∂–µ–Ω–∏–µ –≤ –º–∞—Ç—á–µ —Å–æ —Å—á—ë—Ç–æ–º - {} - - {}. '.format(stats['wins'], stats['looses'])

    return text, tts


def new_limit_game_invitation():
    text = """
    –°–∫–∞–∂–∏—Ç–µ "–¥–∞", —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç—á —Å–Ω–∞—á–∞–ª–∞, –∏–ª–∏ "–Ω–µ—Ç", —á—Ç–æ–±—ã –≤–µ—Ä–Ω—è—Ç—Å—è –∫ –æ–±—ã—á–Ω–æ–π –∏–≥—Ä–µ.
    """

    tts = '–°–∫–∞–∂–∏—Ç–µ - –¥–∞ - , —á—Ç–æ–±—ã –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –º–∞—Ç—á —Å–Ω–∞—á–∞–ª–∞, –∏–ª–∏  - –Ω–µ—Ç - , —á—Ç–æ–±—ã –≤–µ—Ä–Ω—è—Ç—Å—è –∫ –æ–±—ã—á–Ω–æ–π –∏–≥—Ä–µ. '

    return text, tts


def back_from_limit_to_stand_game():
    text = """
    –•–æ—Ä–æ—à–æ, –∏–≥—Ä–∞–µ–º –≤ –Ω–µ—Å–æ—Ä–µ–≤–Ω–æ–≤–∞—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, –¥–ª—è –¥—É—à–∏, —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å. üòâ
    """

    tts = '–•–æ—Ä–æ—à–æ, - –∏–≥—Ä–∞–µ–º –≤ –Ω–µ—Å–æ—Ä–µ–≤–Ω–æ–≤+–∞—Ç–µ–ª—å–Ω—ã–π –≤–∞—Ä–∏–∞–Ω—Ç, - –¥–ª—è –¥—É—à+–∏, —Ç–∞–∫ —Å–∫–∞–∑–∞—Ç—å. '

    return text, tts